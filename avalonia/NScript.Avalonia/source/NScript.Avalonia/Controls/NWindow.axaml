<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:icons="clr-namespace:Avalonia.NScript.Properties"
                    xmlns:nc="https://github.com/nscript-site">
  <ControlTheme x:Key="NWindowTheme" TargetType="nc:NWindow">
    <Setter Property="Margin" Value="100" />
    <Setter Property="TransparencyLevelHint" Value="Transparent"></Setter>
    <Setter Property="SystemDecorations" Value="{OnPlatform Full, Linux=None, x:TypeArguments=SystemDecorations}" />

    <Setter Property="ExtendClientAreaChromeHints" Value="NoChrome" />
    <Setter Property="ExtendClientAreaTitleBarHeightHint" Value="-1" />
    <Setter Property="ExtendClientAreaToDecorationsHint" Value="True" />
    <Setter Property="TextElement.Foreground" Value="{DynamicResource SukiText}" />
    <Setter Property="FlowDirection" Value="{DynamicResource FlowDirectionPrimary}" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border Margin="{TemplateBinding Margin}"
                ClipToBounds="True"
                CornerRadius="{OnPlatform '0',
                                                  Linux='10',
                                                  x:TypeArguments=CornerRadius}">
          <VisualLayerManager Name="PART_VisualLayerManager" IsHitTestVisible="True">
            <VisualLayerManager.ChromeOverlayLayer>
              <!-- <nc:SukiHost /> -->
              <ItemsControl ItemsSource="{Binding Hosts, RelativeSource={RelativeSource AncestorType={x:Type nc:NWindow}}}">
                <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                    <Panel />
                  </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
              </ItemsControl>
            </VisualLayerManager.ChromeOverlayLayer>
            <Panel x:Name="PART_Root">
              <!--  Margin -100 is there to exclude the unwanted bright corners  -->
              
              <!--<nc:SukiBackground Name="PART_Background"
                                   Margin="-150"
                                   AnimationEnabled="{TemplateBinding BackgroundAnimationEnabled}"
                                   ShaderCode="{TemplateBinding BackgroundShaderCode}"
                                   ShaderFile="{TemplateBinding BackgroundShaderFile}"
                                   Style="{TemplateBinding BackgroundStyle}"
                                   TransitionTime="{TemplateBinding BackgroundTransitionTime}"
                                   TransitionsEnabled="{TemplateBinding BackgroundTransitionsEnabled}"
                                   ForceSoftwareRendering="{TemplateBinding BackgroundForceSoftwareRendering}"/>-->
              
              <Panel Background="White" IsHitTestVisible="False"
                     IsVisible="{DynamicResource IsLight}"
                     Opacity="1" />

              <DockPanel LastChildFill="True">
                <Panel ContextMenu="{TemplateBinding TitleBarContextMenu}" DockPanel.Dock="Top">

                  <Panel.Styles>
                    <Style Selector="nc|NWindow[ShowBottomBorder=True] /template/ Border#PART_BottomBorder">
                      <Setter Property="BorderThickness" Value="0,0,0,1" />
                    </Style>
                    <Style Selector="nc|NWindow[ShowBottomBorder=False] /template/ Border#PART_BottomBorder">
                      <Setter Property="BorderThickness" Value="0,0,0,0" />
                    </Style>
                  </Panel.Styles>
                  <StackPanel>
                    <LayoutTransformControl Name="PART_LayoutTransform" RenderTransformOrigin="0%,0%">
                      <Panel>
                        <!--<nc:GlassCard Name="PART_TitleBarBackground" IsVisible="{TemplateBinding ShowTitlebarBackground}"
                                        BorderThickness="0"
                                        CornerRadius="0"
                                        IsAnimated="False" />-->
                        <DockPanel Margin="12,9" LastChildFill="True">
                          <StackPanel VerticalAlignment="Center"
                                      DockPanel.Dock="Right"
                                      Orientation="Horizontal"
                                      Spacing="7">
                            <StackPanel.Styles>
                              <Style Selector="PathIcon">
                                <Setter Property="Height" Value="10" />
                                <Setter Property="Width" Value="10" />
                              </Style>
                            </StackPanel.Styles>
                            <ItemsControl ItemsSource="{TemplateBinding RightWindowTitleBarControls}">
                              <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                  <StackPanel FlowDirection="{DynamicResource FlowDirectionOpposite}" Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                              </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <Button Name="PART_MinimizeButton"
                                    VerticalContentAlignment="Bottom"
                                    Classes="Basic Rounded WindowControlsButton"
                                    IsVisible="{TemplateBinding CanMinimize}">
                              <PathIcon Margin="0,0,0,4"
                                        VerticalAlignment="Bottom"
                                        Data="{x:Static icons:Icons.WindowMinimize}" />
                            </Button>
                            <Button Name="PART_MaximizeButton"
                                    Classes="Basic Rounded WindowControlsButton"
                                    IsVisible="{TemplateBinding CanMaximize}">
                              <PathIcon x:Name="MaximizeIcon" Data="{x:Static icons:Icons.WindowMaximize}" />
                            </Button>
                            <Button Name="PART_CloseButton" Classes="Basic Rounded WindowControlsButton Close">
                              <PathIcon Data="{x:Static icons:Icons.WindowClose}" />
                            </Button>
                          </StackPanel>
                          <StackPanel VerticalAlignment="Center"
                                      IsHitTestVisible="False"
                                      Orientation="Horizontal"
                                      Spacing="10">
                            <ContentPresenter HorizontalAlignment="Left"
                                              Content="{TemplateBinding LogoContent}"
                                              IsHitTestVisible="False" />
                            <TextBlock VerticalAlignment="Center"
                                       FontSize="{TemplateBinding TitleFontSize}"
                                       FontWeight="{TemplateBinding TitleFontWeight}"
                                       IsHitTestVisible="False"
                                       Text="{TemplateBinding Title}" />
                          </StackPanel>
                        </DockPanel>
                      </Panel>
                    </LayoutTransformControl>
                    <Border Name="PART_BottomBorder" BorderBrush="{DynamicResource SukiBorderBrush}" />
                  </StackPanel>
                </Panel>
                <ContentPresenter x:Name="PART_ContentPresenter"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  CornerRadius="10"
                                  IsHitTestVisible="True" />
              </DockPanel>
            </Panel>
          </VisualLayerManager>
        </Border>
      </ControlTemplate>
    </Setter>

    <Style Selector="^[ShowTitlebarBackground=False] /template/ Menu#PART_Menu">
      <Setter Property="Margin" Value="10,0,0,7"></Setter>
    </Style>
    
    <!--<Style Selector="^[ShowTitlebarBackground=True] /template/ nc|GlassCard#AlternativeGlassMenuBackground">
      <Setter Property="IsVisible" Value="False"></Setter>
    </Style>-->

    <Style Selector="^[WindowState=Maximized] /template/ PathIcon#MaximizeIcon">
      <Setter Property="Data" Value="{x:Static icons:Icons.WindowRestore}" />
    </Style>
    <Style Selector="^[WindowState=Normal] /template/ PathIcon#MaximizeIcon">
      <Setter Property="Data" Value="{x:Static icons:Icons.WindowMaximize}" />
    </Style>
    <Style Selector="^[IsTitleBarVisible=True]">
      <Style Selector="^[TitleBarAnimationEnabled=True]">
        <Style Selector="^ /template/ LayoutTransformControl#PART_LayoutTransform">
          <Style.Animations>
            <Animation Easing="{StaticResource MenuEasing}"
                       FillMode="Forward"
                       Duration="{StaticResource MediumAnimationDuration}">
              <KeyFrame Cue="0%">
                <Setter Property="ScaleTransform.ScaleY" Value="0" />
                <Setter Property="IsVisible" Value="True" />
              </KeyFrame>
              <KeyFrame Cue="100%">
                <Setter Property="ScaleTransform.ScaleY" Value="1" />
              </KeyFrame>
            </Animation>
          </Style.Animations>
        </Style>
      </Style>
      <Style Selector="^[TitleBarAnimationEnabled=False]">
        <Style Selector="^ /template/ LayoutTransformControl#PART_LayoutTransform">
          <Setter Property="IsVisible" Value="True" />
        </Style>
      </Style>
    </Style>
    <Style Selector="^[IsTitleBarVisible=False]">
      <Style Selector="^[TitleBarAnimationEnabled=True]">
        <Style Selector="^ /template/ LayoutTransformControl#PART_LayoutTransform">
          <Style.Animations>
            <Animation Easing="{StaticResource MenuEasing}"
                       FillMode="Forward"
                       Duration="{StaticResource MediumAnimationDuration}">
              <KeyFrame Cue="0%">
                <Setter Property="ScaleTransform.ScaleY" Value="1" />
              </KeyFrame>
              <KeyFrame Cue="100%">
                <Setter Property="ScaleTransform.ScaleY" Value="0" />
                <Setter Property="IsVisible" Value="False" />
              </KeyFrame>
            </Animation>
          </Style.Animations>
        </Style>
      </Style>
      <Style Selector="^[TitleBarAnimationEnabled=False]">
        <Style Selector="^ /template/ LayoutTransformControl#PART_LayoutTransform">
          <Setter Property="IsVisible" Value="False" />
        </Style>
      </Style>
    </Style>
  </ControlTheme>
  <ControlTheme x:Key="{x:Type nc:NWindow}"
                BasedOn="{StaticResource NWindowTheme}"
                TargetType="nc:NWindow" />

  <ControlTheme x:Key="SukiButtonStyle" TargetType="Button">
    <Setter Property="BorderThickness" Value="1.2" />
    <Setter Property="BorderBrush" Value="{DynamicResource SukiMediumBorderBrush}" />
    <Setter Property="CornerRadius" Value="{DynamicResource SmallCornerRadius}" />
    <Setter Property="Background" Value="{DynamicResource SukiBackground}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="FontSize" Value="15" />
    <Setter Property="Padding" Value="20,8" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border Padding="{TemplateBinding Padding}" Name="RootBorder"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                        
                CornerRadius="{TemplateBinding CornerRadius}"
                TextElement.Foreground="{TemplateBinding Foreground}">
          <Border.Transitions>
            <Transitions>
              <DoubleTransition Property="Opacity" Duration="0:0:0.35"></DoubleTransition>
            </Transitions>
          </Border.Transitions>
          <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Orientation="Horizontal">
            <ContentPresenter HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              FontFamily="{TemplateBinding FontFamily}"
                              FontSize="{TemplateBinding FontSize}"
                              FontWeight="{DynamicResource DefaultDemiBold}"
                              RecognizesAccessKey="True" />
          </StackPanel>
        </Border>
      </ControlTemplate>
    </Setter>


    <Style Selector="^.Basic">
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="Padding" Value="11,8" />
      <Setter Property="CornerRadius" Value="5" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Foreground" Value="{DynamicResource SukiPrimaryColor}" />
      <Style Selector="^ /template/ Border">
        <Setter Property="BoxShadow" Value="0 0 0 0 Transparent" />
      </Style>
      <Style Selector="^ /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource SukiPrimaryColor}" />
      </Style>
      <!--  Events  -->
      <Style Selector="^:pointerover">
        <Setter Property="Background" Value="Transparent" />
        <Style Selector="^ /template/ Border">
          <Setter Property="RenderTransform">
            <Setter.Value>
              <ScaleTransform ScaleX="1.03" ScaleY="1.03" />
            </Setter.Value>
          </Setter>
        </Style>
      </Style>
      <Style Selector="^.Icon:pointerover">
        <Setter Property="Background" Value="Transparent" />
        <Style Selector="^ /template/ Border">
          <Setter Property="RenderTransform">
            <Setter.Value>
              <ScaleTransform ScaleX="1.07" ScaleY="1.07" />
            </Setter.Value>
          </Setter>
        </Style>
      </Style>
      <Style Selector="^:pressed /template/ Border">
        <Setter Property="Background" Value="Transparent" />
      </Style>

      <!--  Color Variants  -->
      <Style Selector="^.Accent">
        <Setter Property="Foreground" Value="{DynamicResource SukiAccentColor}" />
        <Style Selector="^ /template/ TextBlock">
          <Setter Property="Foreground" Value="{DynamicResource SukiAccentColor}" />
        </Style>
        <Style Selector="^ /template/ ContentPresenter">
          <Setter Property="Foreground" Value="{DynamicResource SukiAccentColor}" />
        </Style>

      </Style>
    </Style>


    <Style Selector="^.Rounded">
      <Setter Property="CornerRadius" Value="100" />
    </Style>

    <Style Selector="^.WindowControlsButton">
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="CornerRadius" Value="20" />
      <Setter Property="Height" Value="25" />
      <Setter Property="Width" Value="25" />
      <Setter Property="Cursor" Value="Hand" />
      <Setter Property="Background" Value="{DynamicResource SukiPrimaryColor0}" />
      <Setter Property="Padding" Value="0" />
      <Setter Property="Transitions">
        <Transitions>
          <BrushTransition Property="Background" Duration="0.01" />
        </Transitions>
      </Setter>
      <Style Selector="^:pointerover">
        <Setter Property="Background" Value="{DynamicResource SukiPrimaryColor25}" />
      </Style>
      <Style Selector="^.Close">
        <Setter Property="Background" Value="{DynamicResource SukiAccentColor0}" />
        <Style Selector="^:pointerover">
          <Setter Property="Background" Value="{DynamicResource SukiAccentColor25}" />
        </Style>
      </Style>
    </Style>

  </ControlTheme>
  <ControlTheme x:Key="{x:Type Button}"
                BasedOn="{StaticResource SukiButtonStyle}"
                TargetType="Button" />
</ResourceDictionary>
